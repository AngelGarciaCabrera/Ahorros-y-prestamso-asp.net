// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeAhorroYPrestamos.Models;

#nullable disable

namespace SistemaDeAhorroYPrestamos.Migrations
{
    [DbContext(typeof(AhorrosPrestamosContext))]
    [Migration("20230421032835_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Cliente", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdCuentaBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.CuentaBanco", b =>
                {
                    b.Property<string>("Numero")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClienteCedula")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Numero");

                    b.HasIndex("ClienteCedula")
                        .IsUnique();

                    b.ToTable("CuentaBancos", (string)null);
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.CuotaInversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CodigoComprobante")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CodigoInversion")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CodigoInversionNavigationCodigo")
                        .HasColumnType("int");

                    b.Property<string>("CuentaBancoNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("FechaPlanificada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRealizada")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoInversionNavigationCodigo");

                    b.HasIndex("CuentaBancoNumero");

                    b.ToTable("CuotaInversiones", (string)null);
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.CuotaPrestamo", b =>
                {
                    b.Property<int>("PrestamoCodigo")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoComprobante")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPlanificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRealizado")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("PrestamoCodigoNavigationCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrestamoCodigo");

                    b.HasIndex("PrestamoCodigoNavigationCodigo");

                    b.ToTable("CuotaPrestamos", (string)null);
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Garantia", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("PrestamoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Codigo");

                    b.HasIndex("PrestamoCodigo");

                    b.ToTable("Garantias", (string)null);
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Inversiones", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("ClienteCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CuentaBancoNumero")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("FechaBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEnd")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Interes")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Codigo");

                    b.HasIndex("ClienteCedula");

                    b.HasIndex("CuentaBancoNumero")
                        .IsUnique();

                    b.ToTable("Inversiones", (string)null);
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Prestamo", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("ClienteCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("FechaBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEnd")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Interes")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Codigo");

                    b.HasIndex("ClienteCedula");

                    b.ToTable("Prestamos", (string)null);
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.CuentaBanco", b =>
                {
                    b.HasOne("SistemaDeAhorroYPrestamos.Models.Cliente", "ClienteCedulaNavigation")
                        .WithOne("CuentaBancoNavigation")
                        .HasForeignKey("SistemaDeAhorroYPrestamos.Models.CuentaBanco", "ClienteCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteCedulaNavigation");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.CuotaInversion", b =>
                {
                    b.HasOne("SistemaDeAhorroYPrestamos.Models.Inversiones", "CodigoInversionNavigation")
                        .WithMany("CuetasInversion")
                        .HasForeignKey("CodigoInversionNavigationCodigo");

                    b.HasOne("SistemaDeAhorroYPrestamos.Models.CuentaBanco", "CuentaBancoNumeroNavigation")
                        .WithMany()
                        .HasForeignKey("CuentaBancoNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoInversionNavigation");

                    b.Navigation("CuentaBancoNumeroNavigation");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.CuotaPrestamo", b =>
                {
                    b.HasOne("SistemaDeAhorroYPrestamos.Models.Prestamo", "PrestamoCodigoNavigation")
                        .WithMany("CuotasPrestamo")
                        .HasForeignKey("PrestamoCodigoNavigationCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrestamoCodigoNavigation");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Garantia", b =>
                {
                    b.HasOne("SistemaDeAhorroYPrestamos.Models.Prestamo", "PrestamoCodigoNavigation")
                        .WithMany("Garantia")
                        .HasForeignKey("PrestamoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrestamoCodigoNavigation");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Inversiones", b =>
                {
                    b.HasOne("SistemaDeAhorroYPrestamos.Models.Cliente", "ClienteCedulaNavigation")
                        .WithMany("Inversiones")
                        .HasForeignKey("ClienteCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeAhorroYPrestamos.Models.CuentaBanco", "CuentaBancoNumeroNavigation")
                        .WithOne("Inversione")
                        .HasForeignKey("SistemaDeAhorroYPrestamos.Models.Inversiones", "CuentaBancoNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteCedulaNavigation");

                    b.Navigation("CuentaBancoNumeroNavigation");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Prestamo", b =>
                {
                    b.HasOne("SistemaDeAhorroYPrestamos.Models.Cliente", "ClienteCedulaNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("ClienteCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteCedulaNavigation");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Cliente", b =>
                {
                    b.Navigation("CuentaBancoNavigation");

                    b.Navigation("Inversiones");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.CuentaBanco", b =>
                {
                    b.Navigation("Inversione");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Inversiones", b =>
                {
                    b.Navigation("CuetasInversion");
                });

            modelBuilder.Entity("SistemaDeAhorroYPrestamos.Models.Prestamo", b =>
                {
                    b.Navigation("CuotasPrestamo");

                    b.Navigation("Garantia");
                });
#pragma warning restore 612, 618
        }
    }
}
